# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: pl
    fallback_locale: pl
    sodium_time_cost: !php/const '\Polsl\Packages\Constants\Hasher::SODIUM_TIME_COST'
    sodium_memory_cost_kilobytes: !php/const '\Polsl\Packages\Constants\Hasher::SODIUM_MEMORY_LIMIT_IN_KB'
    sodium_memory_cost_bytes: !php/const '\Polsl\Packages\Constants\Hasher::SODIUM_MEMORY_LIMIT_IN_BYTES'
    default_timezone: 'Europe/Warsaw'
    jwt_key: '%env(JWT_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Polsl\:
        bind:
            string $timezone: '%default_timezone%'
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    Polsl\Packages\:
        resource: '../packages/src'
        bind:
            League\Tactician\CommandBus $queryBus: '@tactician.commandbus.query_bus'
            League\Tactician\CommandBus $commandBus: '@tactician.commandbus.command_bus'

        exclude:
            - '../packages/src/TestCase'
            - '../packages/src/Constants'
            - '../packages/src/JsonApi/{Application,Contracts,Infrastructure,QueryTemplate}'
            - '../packages/src/SqlExpressions'
            - '../packages/src/Faker'
            - '../packages/src/HttpClient'
            - '../packages/src/HttpResponse'

    polsl.json_api.schemas_locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']
        arguments:
            -
                - '@Polsl\Application\Schema\SnackSchema'
                - '@Polsl\Application\Schema\MachineSchema'
                - '@Polsl\Application\Schema\UserSchema'
                - '@Polsl\Application\Schema\MachineSnackSchema'
                - '@Polsl\Application\Schema\SnackPriceSchema'
                - '@Polsl\Application\Schema\SnackBuySchema'

    Polsl\Infrastructure\Neomerx\NeomerxLazySchemaContainer:
        arguments:
            $schemaLocator: '@polsl.json_api.schemas_locator'
    Neomerx\JsonApi\Contracts\Schema\SchemaContainerInterface:
        alias: 'Polsl\Infrastructure\Neomerx\NeomerxLazySchemaContainer'
    Polsl\Packages\JsonApi\Infrastructure\NeomerxJsonApiSerializer: ~
    Polsl\Packages\JsonApi\Contracts\JsonApiSerializerInterface:
        alias: 'Polsl\Packages\JsonApi\Infrastructure\NeomerxJsonApiSerializer'
    Neomerx\JsonApi\Factories\Factory: ~
    Neomerx\JsonApi\Contracts\Factories\FactoryInterface:
        alias: 'Neomerx\JsonApi\Factories\Factory'
    Neomerx\JsonApi\Encoder\Encoder: ~
    Neomerx\JsonApi\Contracts\Encoder\EncoderInterface: '@Neomerx\JsonApi\Encoder\Encoder'

    Polsl\UserInterface\Http\:
        resource: '../src/UserInterface/Http/**/*.php'
        public: true

    Polsl\Application\Query\:
        resource: '../src/Application/Query/**/*Handler.php'
        tags:
            - { name: tactician.handler, typehints: true, bus: query_bus }

    Polsl\Application\Command\:
        resource: '../src/Application/Command/**/*Handler.php'
        tags:
            - { name: tactician.handler, typehints: true, bus: command_bus }

    Polsl\Infrastructure\Symfony\Security\SymfonyAuthService:
        arguments:
            $userProvider: '@Polsl\Infrastructure\Symfony\SymfonyUserProvider'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\PasswordHasher\Hasher\SodiumPasswordHasher:
        arguments:
            $opsLimit: '%sodium_time_cost%'
            $memLimit: '%sodium_memory_cost_bytes%'

