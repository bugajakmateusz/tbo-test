name: CI/CD Pipeline
permissions:
  contents: write
  actions: write
  checks: write
  security-events: write   # To upload sarif files

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Build and start application
        run: docker compose up haproxy nginx fpm postgres postgres_test node_builder_v22 mailhog -d

      - name: Run PHP builder and wait for services to be ready
        run: docker compose run --rm --user=www-data php_builder

      - name: Run static analysis
        run: docker compose exec --user=www-data fpm composer app:checks

      - name: Run tests
        run: docker compose exec --user=www-data fpm vendor/bin/phpunit --log-junit phpunit-report.xml

      - name: Publish test results
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/phpunit-report.xml'

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/php@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --all-projects --fail-on=upgradable --sarif-file-output=snyk.sarif --org=${{ secrets.SNYK_ORG }}

      - name: Upload Snyk results
        if: success() || failure() # always run even if the previous step fails
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=src,packages/src
            -Dsonar.tests=tests,packages/tests
            -Dsonar.php.tests.reportPath=phpunit-report.xml
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=1000

      - name: Stop containers
        if: always()
        run: docker compose down
